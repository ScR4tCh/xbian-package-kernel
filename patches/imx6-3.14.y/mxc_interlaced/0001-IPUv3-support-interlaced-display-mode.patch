From c50c8ba2110f48c2e8fe157fe020ae2df2269cbc Mon Sep 17 00:00:00 2001
From: Li Qiang <b19715@freescale.com>
Date: Thu, 24 Apr 2014 09:53:45 +0800
Subject: [PATCH 1/3] IPUv3 support interlaced display mode.

---
 drivers/mxc/ipu3/ipu_disp.c | 294 ++++++++++++++++++++++----------------------
 drivers/mxc/ipu3/ipu_regs.h |   8 +-
 2 files changed, 151 insertions(+), 151 deletions(-)

diff --git a/drivers/mxc/ipu3/ipu_disp.c b/drivers/mxc/ipu3/ipu_disp.c
index 87fa001..9639a95 100644
--- a/drivers/mxc/ipu3/ipu_disp.c
+++ b/drivers/mxc/ipu3/ipu_disp.c
@@ -787,9 +787,29 @@ void _ipu_dc_init(struct ipu_soc *ipu, int dc_chan, int di, bool interlaced, uin
 
 	if ((dc_chan == 1) || (dc_chan == 5)) {
 		if (interlaced) {
-			_ipu_dc_link_event(ipu, dc_chan, DC_EVT_NL, 0, 3);
-			_ipu_dc_link_event(ipu, dc_chan, DC_EVT_EOL, 0, 2);
-			_ipu_dc_link_event(ipu, dc_chan, DC_EVT_NEW_DATA, 0, 1);
+			if (di) {
+				_ipu_dc_link_event(ipu, dc_chan, DC_EVT_NL, 1, 3);
+				_ipu_dc_link_event(ipu, dc_chan, DC_EVT_EOL, 1, 2);
+				_ipu_dc_link_event(ipu, dc_chan, DC_EVT_NEW_DATA, 1, 1);
+				if ((pixel_fmt == IPU_PIX_FMT_YUYV) ||
+				(pixel_fmt == IPU_PIX_FMT_UYVY) ||
+				(pixel_fmt == IPU_PIX_FMT_YVYU) ||
+				(pixel_fmt == IPU_PIX_FMT_VYUY)) {
+					_ipu_dc_link_event(ipu, dc_chan, DC_ODD_UGDE1, 9, 5);
+					_ipu_dc_link_event(ipu, dc_chan, DC_EVEN_UGDE1, 8, 5);
+				}
+			} else {
+				_ipu_dc_link_event(ipu, dc_chan, DC_EVT_NL, 0, 3);
+				_ipu_dc_link_event(ipu, dc_chan, DC_EVT_EOL, 0, 2);
+				_ipu_dc_link_event(ipu, dc_chan, DC_EVT_NEW_DATA, 0, 1);
+				if ((pixel_fmt == IPU_PIX_FMT_YUYV) ||
+				(pixel_fmt == IPU_PIX_FMT_UYVY) ||
+				(pixel_fmt == IPU_PIX_FMT_YVYU) ||
+				(pixel_fmt == IPU_PIX_FMT_VYUY)) {
+					_ipu_dc_link_event(ipu, dc_chan, DC_ODD_UGDE0, 10, 5);
+					_ipu_dc_link_event(ipu, dc_chan, DC_EVEN_UGDE0, 11, 5);
+				}
+			}
 		} else {
 			if (di) {
 				_ipu_dc_link_event(ipu, dc_chan, DC_EVT_NL, 2, 3);
@@ -1321,14 +1341,14 @@ int32_t ipu_init_sync_panel(struct ipu_soc *ipu, int disp, uint32_t pixel_clk,
 
 	if (sig.interlaced) {
 		if (g_ipu_hw_rev >= IPU_V3DEX) {
-			/* Setup internal HSYNC waveform */
+			/* Internal VSYNC for each frame */
 			_ipu_di_sync_config(ipu,
 					disp, 		/* display */
-					1, 		/* counter */
-					h_total/2 - 1, 	/* run count */
-					DI_SYNC_CLK,	/* run_resolution */
-					0, 		/* offset */
-					DI_SYNC_NONE, 	/* offset resolution */
+					DI_SYNC_COUNT_1, 		/* counter */
+					v_total*2 - 1, 	/* run count */
+					(3 - 1),	/* run_resolution, counter 1 can reference to counter 6,7,8 with run_resolution=2,3,4 */
+					1, 		/* offset */
+					(3 - 1), 	/* offset resolution, 3=counter 7 */
 					0, 		/* repeat count */
 					DI_SYNC_NONE, 	/* CNT_CLR_SEL */
 					0, 		/* CNT_POLARITY_GEN_EN */
@@ -1338,50 +1358,51 @@ int32_t ipu_init_sync_panel(struct ipu_soc *ipu, int disp, uint32_t pixel_clk,
 					0		/* COUNT DOWN */
 					);
 
-			/* Field 1 VSYNC waveform */
+			/* HSYNC waveform on DI_PIN02 */
 			_ipu_di_sync_config(ipu,
 					disp, 		/* display */
-					2, 		/* counter */
-					h_total - 1, 	/* run count */
-					DI_SYNC_CLK,	/* run_resolution */
+					DI_SYNC_HSYNC, 		/* counter */
+					h_total - 1,	/* run count */
+					DI_SYNC_CLK,	/* run_resolution, counter 2 can reference to counter 5,7 with run_resolution=3,4 */
 					0, 		/* offset */
 					DI_SYNC_NONE, 	/* offset resolution */
 					0, 		/* repeat count */
 					DI_SYNC_NONE, 	/* CNT_CLR_SEL */
-					0, 		/* CNT_POLARITY_GEN_EN */
+					1, 		/* CNT_POLARITY_GEN_EN */
 					DI_SYNC_NONE, 	/* CNT_POLARITY_CLR_SEL */
-					DI_SYNC_NONE, 	/* CNT_POLARITY_TRIGGER_SEL */
+					DI_SYNC_CLK, 	/* CNT_POLARITY_TRIGGER_SEL */
 					0, 		/* COUNT UP */
-					2*div		/* COUNT DOWN */
+					2*h_sync_width		/* COUNT DOWN */
 					);
 
-			/* Setup internal HSYNC waveform */
+			/* VSYNC waveform on DI_PIN03 */
+			vsync_cnt = DI_SYNC_VSYNC;
 			_ipu_di_sync_config(ipu,
 					disp, 		/* display */
-					3, 		/* counter */
-					v_total*2 - 1, 	/* run count */
-					DI_SYNC_INT_HSYNC,	/* run_resolution */
+					DI_SYNC_VSYNC, 		/* counter */
+					v_total - 1,	/* run count */
+					(4 - 1),	/* run_resolution, counter 3 can reference to counter 7 with run_resolution=4 */
 					1, 			/* offset */
-					DI_SYNC_INT_HSYNC, 	/* offset resolution */
-					0, 		/* repeat count */
-					DI_SYNC_NONE, 	/* CNT_CLR_SEL */
-					0, 		/* CNT_POLARITY_GEN_EN */
+					(4 - 1), 	/* offset resolution, 4=counter 7 */
+					2, 		/* repeat count */
+					DI_SYNC_COUNT_1, 	/* CNT_CLR_SEL */
+					1, 		/* CNT_POLARITY_GEN_EN */
 					DI_SYNC_NONE, 	/* CNT_POLARITY_CLR_SEL */
-					DI_SYNC_NONE, 	/* CNT_POLARITY_TRIGGER_SEL */
+					(4 - 1),	/* CNT_POLARITY_TRIGGER_SEL, 4=counter 7 */
 					0, 		/* COUNT UP */
-					2*div		/* COUNT DOWN */
+					2*v_sync_width		/* COUNT DOWN */
 					);
 
-			/* Active Field ? */
+			/* Active Field */
 			_ipu_di_sync_config(ipu,
 					disp, 		/* display */
-					4, 		/* counter */
+					DI_SYNC_AFIELD, 		/* counter */
 					v_total/2 - 1, 	/* run count */
 					DI_SYNC_HSYNC,	/* run_resolution */
-					v_start_width, 	/*  offset */
-					DI_SYNC_HSYNC, 	/* offset resolution */
+					h_total/2, /*  offset */
+					DI_SYNC_CLK,	/* offset resolution */
 					2, 		/* repeat count */
-					DI_SYNC_VSYNC, 	/* CNT_CLR_SEL */
+					DI_SYNC_COUNT_1, 	/* CNT_CLR_SEL */
 					0, 		/* CNT_POLARITY_GEN_EN */
 					DI_SYNC_NONE, 	/* CNT_POLARITY_CLR_SEL */
 					DI_SYNC_NONE, 	/* CNT_POLARITY_TRIGGER_SEL */
@@ -1392,48 +1413,13 @@ int32_t ipu_init_sync_panel(struct ipu_soc *ipu, int disp, uint32_t pixel_clk,
 			/* Active Line */
 			_ipu_di_sync_config(ipu,
 					disp, 		/* display */
-					5, 		/* counter */
+					DI_SYNC_ALINE, 		/* counter */
 					0, 		/* run count */
 					DI_SYNC_HSYNC,	/* run_resolution */
-					0, 		/*  offset */
-					DI_SYNC_NONE, 	/* offset resolution */
-					height/2, 	/* repeat count */
-					4, 		/* CNT_CLR_SEL */
-					0, 		/* CNT_POLARITY_GEN_EN */
-					DI_SYNC_NONE, 	/* CNT_POLARITY_CLR_SEL */
-					DI_SYNC_NONE, 	/* CNT_POLARITY_TRIGGER_SEL */
-					0, 		/* COUNT UP */
-					0		/* COUNT DOWN */
-					);
-
-			/* Field 0 VSYNC waveform */
-			_ipu_di_sync_config(ipu,
-					disp, 		/* display */
-					6, 		/* counter */
-					v_total - 1, 	/* run count */
-					DI_SYNC_HSYNC,	/* run_resolution */
-					0, 		/* offset */
-					DI_SYNC_NONE, 	/* offset resolution */
-					0, 		/* repeat count */
-					DI_SYNC_NONE, 	/* CNT_CLR_SEL  */
-					0, 		/* CNT_POLARITY_GEN_EN */
-					DI_SYNC_NONE, 	/* CNT_POLARITY_CLR_SEL */
-					DI_SYNC_NONE, 	/* CNT_POLARITY_TRIGGER_SEL */
-					0, 		/* COUNT UP */
-					0		/* COUNT DOWN */
-					);
-
-			/* DC VSYNC waveform */
-			vsync_cnt = 7;
-			_ipu_di_sync_config(ipu,
-					disp, 		/* display */
-					7, 		/* counter */
-					v_total/2 - 1, 	/* run count */
-					DI_SYNC_HSYNC,	/* run_resolution  */
-					9, 		/* offset  */
+					(v_start_width + v_sync_width) / 2, 		/*  offset */
 					DI_SYNC_HSYNC, 	/* offset resolution */
-					2, 		/* repeat count */
-					DI_SYNC_VSYNC, 	/* CNT_CLR_SEL */
+					height/2, 	/* repeat count */
+					DI_SYNC_AFIELD, 		/* CNT_CLR_SEL */
 					0, 		/* CNT_POLARITY_GEN_EN */
 					DI_SYNC_NONE, 	/* CNT_POLARITY_CLR_SEL */
 					DI_SYNC_NONE, 	/* CNT_POLARITY_TRIGGER_SEL */
@@ -1441,16 +1427,16 @@ int32_t ipu_init_sync_panel(struct ipu_soc *ipu, int disp, uint32_t pixel_clk,
 					0		/* COUNT DOWN */
 					);
 
-			/* active pixel waveform */
+			/* Active Pixel */
 			_ipu_di_sync_config(ipu,
 					disp, 		/* display */
-					8, 		/* counter */
+					DI_SYNC_APIXEL, 		/* counter */
 					0, 		/* run count  */
 					DI_SYNC_CLK,	/* run_resolution */
-					h_start_width, 	/* offset  */
+					h_start_width + h_sync_width, 	/* offset  */
 					DI_SYNC_CLK, 	/* offset resolution */
 					width, 		/* repeat count  */
-					5, 		/* CNT_CLR_SEL  */
+					DI_SYNC_ALINE, 		/* CNT_CLR_SEL  */
 					0, 		/* CNT_POLARITY_GEN_EN  */
 					DI_SYNC_NONE, 	/* CNT_POLARITY_CLR_SEL */
 					DI_SYNC_NONE, 	/* CNT_POLARITY_TRIGGER_SEL  */
@@ -1458,38 +1444,30 @@ int32_t ipu_init_sync_panel(struct ipu_soc *ipu, int disp, uint32_t pixel_clk,
 					0		/* COUNT DOWN */
 					);
 
-			/* Second VSYNC */
+			/* Half line HSYNC */
 			_ipu_di_sync_config(ipu,
 					disp, 		/* display */
-					9, 		/* counter */
-					v_total - 1, 	/* run count */
-					DI_SYNC_INT_HSYNC,	/* run_resolution */
-					v_total/2, 		/* offset  */
-					DI_SYNC_INT_HSYNC, 	/* offset resolution  */
+					DI_SYNC_COUNT_7, 		/* counter */
+					h_total/2 - 1,	/* run count */
+					DI_SYNC_CLK,	/* run_resolution */
+					0, 		/* offset */
+					DI_SYNC_NONE, 	/* offset resolution */
 					0, 		/* repeat count */
-					DI_SYNC_HSYNC, 	/* CNT_CLR_SEL */
-					0, 		/* CNT_POLARITY_GEN_EN  */
-					DI_SYNC_NONE, 	/* CNT_POLARITY_CLR_SEL  */
+					DI_SYNC_NONE, 	/* CNT_CLR_SEL */
+					0, 		/* CNT_POLARITY_GEN_EN */
+					DI_SYNC_NONE, 	/* CNT_POLARITY_CLR_SEL */
 					DI_SYNC_NONE, 	/* CNT_POLARITY_TRIGGER_SEL */
 					0, 		/* COUNT UP */
-					2*div		/* COUNT DOWN */
+					0		/* COUNT DOWN */
 					);
 
-			/* set gentime select and tag sel */
-			reg = ipu_di_read(ipu, disp, DI_SW_GEN1(9));
-			reg &= 0x1FFFFFFF;
-			reg |= (3-1)<<29 | 0x00008000;
-			ipu_di_write(ipu, disp, reg, DI_SW_GEN1(9));
-
 			ipu_di_write(ipu, disp, v_total / 2 - 1, DI_SCR_CONF);
 
 			/* set y_sel = 1 */
-			di_gen |= 0x10000000;
-			di_gen |= DI_GEN_POLARITY_5;
-			di_gen |= DI_GEN_POLARITY_8;
+			di_gen |= ((DI_SYNC_HSYNC-1)<<28);
 		} else {
-			/* Setup internal HSYNC waveform */
-			_ipu_di_sync_config(ipu, disp, 1, h_total - 1, DI_SYNC_CLK,
+			/* Internal HSYNC waveform */
+			_ipu_di_sync_config(ipu, disp, DI_SYNC_INT_HSYNC, h_total - 1, DI_SYNC_CLK,
 					0, DI_SYNC_NONE, 0, DI_SYNC_NONE, 0, DI_SYNC_NONE,
 					DI_SYNC_NONE, 0, 0);
 
@@ -1501,52 +1479,52 @@ int32_t ipu_init_sync_panel(struct ipu_soc *ipu, int disp, uint32_t pixel_clk,
 			}
 			v_total += v_start_width + v_end_width;
 
+			/* HSYNC waveform */
+			_ipu_di_sync_config(ipu, disp, DI_SYNC_HSYNC, h_total - 1, DI_SYNC_CLK,
+					0, DI_SYNC_NONE, 0, DI_SYNC_NONE, 0,
+					DI_SYNC_NONE, DI_SYNC_NONE, 0, 4);
+
 			/* Field 1 VSYNC waveform */
-			_ipu_di_sync_config(ipu, disp, 2, v_total - 1, 1,
+			_ipu_di_sync_config(ipu, disp, DI_SYNC_VSYNC, v_total - 1, DI_SYNC_INT_HSYNC,
 					field0_offset,
-					field0_offset ? 1 : DI_SYNC_NONE,
+					field0_offset ? DI_SYNC_INT_HSYNC : DI_SYNC_NONE,
 					0, DI_SYNC_NONE, 0,
 					DI_SYNC_NONE, DI_SYNC_NONE, 0, 4);
 
-			/* Setup internal HSYNC waveform */
-			_ipu_di_sync_config(ipu, disp, 3, h_total - 1, DI_SYNC_CLK,
-					0, DI_SYNC_NONE, 0, DI_SYNC_NONE, 0,
-					DI_SYNC_NONE, DI_SYNC_NONE, 0, 4);
-
-			/* Active Field ? */
-			_ipu_di_sync_config(ipu, disp, 4,
+			/* Active Field */
+			_ipu_di_sync_config(ipu, disp, DI_SYNC_AFIELD,
 					field0_offset ?
 					field0_offset : field1_offset - 2,
-					1, v_start_width + v_sync_width, 1, 2, 2,
-					0, DI_SYNC_NONE, DI_SYNC_NONE, 0, 0);
+					DI_SYNC_INT_HSYNC, v_start_width + v_sync_width, DI_SYNC_INT_HSYNC, 
+					2, DI_SYNC_VSYNC, 0, DI_SYNC_NONE, DI_SYNC_NONE, 0, 0);
 
 			/* Active Line */
-			_ipu_di_sync_config(ipu, disp, 5, 0, 1,
+			_ipu_di_sync_config(ipu, disp, DI_SYNC_ALINE, 0, DI_SYNC_INT_HSYNC,
 					0, DI_SYNC_NONE,
-					height / 2, 4, 0, DI_SYNC_NONE,
+					height / 2, DI_SYNC_AFIELD, 0, DI_SYNC_NONE,
 					DI_SYNC_NONE, 0, 0);
 
-			/* Field 0 VSYNC waveform */
-			_ipu_di_sync_config(ipu, disp, 6, v_total - 1, 1,
-					0, DI_SYNC_NONE,
-					0, DI_SYNC_NONE, 0, DI_SYNC_NONE,
-					DI_SYNC_NONE, 0, 0);
+			/* Active Pixel */
+			_ipu_di_sync_config(ipu, disp, DI_SYNC_APIXEL, 0, DI_SYNC_CLK,
+					h_sync_width + h_start_width, DI_SYNC_CLK,
+					width, DI_SYNC_ALINE, 0, DI_SYNC_NONE, DI_SYNC_NONE,
+					0, 0);
 
 			/* DC VSYNC waveform */
-			vsync_cnt = 7;
-			_ipu_di_sync_config(ipu, disp, 7, 0, 1,
+			vsync_cnt = DI_SYNC_COUNT_7;
+			_ipu_di_sync_config(ipu, disp, DI_SYNC_COUNT_7, 0, DI_SYNC_INT_HSYNC,
 					field1_offset,
-					field1_offset ? 1 : DI_SYNC_NONE,
-					1, 2, 0, DI_SYNC_NONE, DI_SYNC_NONE, 0, 0);
+					field1_offset ? DI_SYNC_INT_HSYNC : DI_SYNC_NONE,
+					1, DI_SYNC_VSYNC, 0, DI_SYNC_NONE, DI_SYNC_NONE, 0, 0);
 
-			/* active pixel waveform */
-			_ipu_di_sync_config(ipu, disp, 8, 0, DI_SYNC_CLK,
-					h_sync_width + h_start_width, DI_SYNC_CLK,
-					width, 5, 0, DI_SYNC_NONE, DI_SYNC_NONE,
-					0, 0);
+			/* Field 0 VSYNC waveform */
+			_ipu_di_sync_config(ipu, disp, DI_SYNC_COUNT_8, v_total - 1, DI_SYNC_INT_HSYNC,
+					0, DI_SYNC_NONE,
+					0, DI_SYNC_NONE, 0, DI_SYNC_NONE,
+					DI_SYNC_NONE, 0, 0);
 
 			/* ??? */
-			_ipu_di_sync_config(ipu, disp, 9, v_total - 1, 2,
+			_ipu_di_sync_config(ipu, disp, DI_SYNC_COUNT_9, v_total - 1, (DI_SYNC_HSYNC - 1),
 					0, DI_SYNC_NONE,
 					0, DI_SYNC_NONE, 6, DI_SYNC_NONE,
 					DI_SYNC_NONE, 0, 0);
@@ -1560,15 +1538,37 @@ int32_t ipu_init_sync_panel(struct ipu_soc *ipu, int disp, uint32_t pixel_clk,
 		}
 
 		/* Init template microcode */
-		_ipu_dc_write_tmpl(ipu, 0, WROD(0), 0, map, SYNC_WAVE, 0, 8, 1);
+		if (disp) {
+			_ipu_dc_write_tmpl(ipu, 1, WROD(0), 0, map, SYNC_WAVE, 0, DI_SYNC_APIXEL, 1);
+			if ((pixel_fmt == IPU_PIX_FMT_YUYV) ||
+				(pixel_fmt == IPU_PIX_FMT_UYVY) ||
+				(pixel_fmt == IPU_PIX_FMT_YVYU) ||
+				(pixel_fmt == IPU_PIX_FMT_VYUY)) {
+				_ipu_dc_write_tmpl(ipu, 8, WROD(0), 0, (map - 1), SYNC_WAVE, 0, DI_SYNC_APIXEL, 1);
+				_ipu_dc_write_tmpl(ipu, 9, WROD(0), 0, map, SYNC_WAVE, 0, DI_SYNC_APIXEL, 1);
+				/* configure user events according to DISP NUM */
+				ipu_dc_write(ipu, (width - 1), DC_UGDE_3(disp));
+			}
+		} else {
+			_ipu_dc_write_tmpl(ipu, 0, WROD(0), 0, map, SYNC_WAVE, 0, DI_SYNC_APIXEL, 1);
+			if ((pixel_fmt == IPU_PIX_FMT_YUYV) ||
+				(pixel_fmt == IPU_PIX_FMT_UYVY) ||
+				(pixel_fmt == IPU_PIX_FMT_YVYU) ||
+				(pixel_fmt == IPU_PIX_FMT_VYUY)) {
+				_ipu_dc_write_tmpl(ipu, 10, WROD(0), 0, (map - 1), SYNC_WAVE, 0, DI_SYNC_APIXEL, 1);
+				_ipu_dc_write_tmpl(ipu, 11, WROD(0), 0, map, SYNC_WAVE, 0, DI_SYNC_APIXEL, 1);
+				/* configure user events according to DISP NUM */
+				ipu_dc_write(ipu, width - 1, DC_UGDE_3(disp));
+			}
+		}
 
 		if (sig.Hsync_pol)
-			di_gen |= DI_GEN_POLARITY_3;
-		if (sig.Vsync_pol)
 			di_gen |= DI_GEN_POLARITY_2;
+		if (sig.Vsync_pol)
+			di_gen |= DI_GEN_POLARITY_3;
 	} else {
 		/* Setup internal HSYNC waveform */
-		_ipu_di_sync_config(ipu, disp, 1, h_total - 1, DI_SYNC_CLK,
+		_ipu_di_sync_config(ipu, disp, DI_SYNC_INT_HSYNC, h_total - 1, DI_SYNC_CLK,
 					0, DI_SYNC_NONE, 0, DI_SYNC_NONE, 0, DI_SYNC_NONE,
 					DI_SYNC_NONE, 0, 0);
 
@@ -1586,19 +1586,19 @@ int32_t ipu_init_sync_panel(struct ipu_soc *ipu, int disp, uint32_t pixel_clk,
 		ipu_di_write(ipu, disp, v_total - 1, DI_SCR_CONF);
 
 		/* Setup active data waveform to sync with DC */
-		_ipu_di_sync_config(ipu, disp, 4, 0, DI_SYNC_HSYNC,
+		_ipu_di_sync_config(ipu, disp, DI_SYNC_ALINE, 0, DI_SYNC_HSYNC,
 				    v_sync_width + v_start_width, DI_SYNC_HSYNC, height,
 				    DI_SYNC_VSYNC, 0, DI_SYNC_NONE,
 				    DI_SYNC_NONE, 0, 0);
-		_ipu_di_sync_config(ipu, disp, 5, 0, DI_SYNC_CLK,
+		_ipu_di_sync_config(ipu, disp, DI_SYNC_APIXEL, 0, DI_SYNC_CLK,
 				    h_sync_width + h_start_width, DI_SYNC_CLK,
-				    width, 4, 0, DI_SYNC_NONE, DI_SYNC_NONE, 0,
+				    width, DI_SYNC_ALINE, 0, DI_SYNC_NONE, DI_SYNC_NONE, 0,
 				    0);
 
 		/* set VGA delayed hsync/vsync no matter VGA enabled */
 		if (disp) {
 			/* couter 7 for VGA delay HSYNC */
-			_ipu_di_sync_config(ipu, disp, 7,
+			_ipu_di_sync_config(ipu, disp, DI_SYNC_COUNT_7,
 					h_total - 1, DI_SYNC_CLK,
 					18, DI_SYNC_CLK,
 					0, DI_SYNC_NONE,
@@ -1606,7 +1606,7 @@ int32_t ipu_init_sync_panel(struct ipu_soc *ipu, int disp, uint32_t pixel_clk,
 					0, h_sync_width * 2);
 
 			/* couter 8 for VGA delay VSYNC */
-			_ipu_di_sync_config(ipu, disp, 8,
+			_ipu_di_sync_config(ipu, disp, DI_SYNC_COUNT_8,
 					v_total - 1, DI_SYNC_INT_HSYNC,
 					1, DI_SYNC_INT_HSYNC,
 					0, DI_SYNC_NONE,
@@ -1615,8 +1615,6 @@ int32_t ipu_init_sync_panel(struct ipu_soc *ipu, int disp, uint32_t pixel_clk,
 		}
 
 		/* reset all unused counters */
-		ipu_di_write(ipu, disp, 0, DI_SW_GEN0(6));
-		ipu_di_write(ipu, disp, 0, DI_SW_GEN1(6));
 		if (!disp) {
 			ipu_di_write(ipu, disp, 0, DI_SW_GEN0(7));
 			ipu_di_write(ipu, disp, 0, DI_SW_GEN1(7));
@@ -1629,40 +1627,36 @@ int32_t ipu_init_sync_panel(struct ipu_soc *ipu, int disp, uint32_t pixel_clk,
 		ipu_di_write(ipu, disp, 0, DI_SW_GEN1(9));
 		ipu_di_write(ipu, disp, 0, DI_STP_REP(9));
 
-		reg = ipu_di_read(ipu, disp, DI_STP_REP(6));
-		reg &= 0x0000FFFF;
-		ipu_di_write(ipu, disp, reg, DI_STP_REP(6));
-
 		/* Init template microcode */
 		if (disp) {
 			if ((pixel_fmt == IPU_PIX_FMT_YUYV) ||
 				(pixel_fmt == IPU_PIX_FMT_UYVY) ||
 				(pixel_fmt == IPU_PIX_FMT_YVYU) ||
 				(pixel_fmt == IPU_PIX_FMT_VYUY)) {
-				_ipu_dc_write_tmpl(ipu, 8, WROD(0), 0, (map - 1), SYNC_WAVE, 0, 5, 1);
-				_ipu_dc_write_tmpl(ipu, 9, WROD(0), 0, map, SYNC_WAVE, 0, 5, 1);
+				_ipu_dc_write_tmpl(ipu, 8, WROD(0), 0, (map - 1), SYNC_WAVE, 0, DI_SYNC_APIXEL, 1);
+				_ipu_dc_write_tmpl(ipu, 9, WROD(0), 0, map, SYNC_WAVE, 0, DI_SYNC_APIXEL, 1);
 				/* configure user events according to DISP NUM */
 				ipu_dc_write(ipu, (width - 1), DC_UGDE_3(disp));
 			}
-			_ipu_dc_write_tmpl(ipu, 2, WROD(0), 0, map, SYNC_WAVE, 8, 5, 1);
-			_ipu_dc_write_tmpl(ipu, 3, WROD(0), 0, map, SYNC_WAVE, 4, 5, 0);
-			_ipu_dc_write_tmpl(ipu, 4, WRG, 0, map, NULL_WAVE, 0, 0, 1);
-			_ipu_dc_write_tmpl(ipu, 1, WROD(0), 0, map, SYNC_WAVE, 0, 5, 1);
+			_ipu_dc_write_tmpl(ipu, 2, WROD(0), 0, map, SYNC_WAVE, 8, DI_SYNC_APIXEL, 1);
+			_ipu_dc_write_tmpl(ipu, 3, WROD(0), 0, map, SYNC_WAVE, 4, DI_SYNC_APIXEL, 0);
+			_ipu_dc_write_tmpl(ipu, 4, WRG, 0, map, NULL_WAVE, 0, DI_SYNC_CLK, 1);
+			_ipu_dc_write_tmpl(ipu, 1, WROD(0), 0, map, SYNC_WAVE, 0, DI_SYNC_APIXEL, 1);
 
 		} else {
 			if ((pixel_fmt == IPU_PIX_FMT_YUYV) ||
 				(pixel_fmt == IPU_PIX_FMT_UYVY) ||
 				(pixel_fmt == IPU_PIX_FMT_YVYU) ||
 				(pixel_fmt == IPU_PIX_FMT_VYUY)) {
-				_ipu_dc_write_tmpl(ipu, 10, WROD(0), 0, (map - 1), SYNC_WAVE, 0, 5, 1);
-				_ipu_dc_write_tmpl(ipu, 11, WROD(0), 0, map, SYNC_WAVE, 0, 5, 1);
+				_ipu_dc_write_tmpl(ipu, 10, WROD(0), 0, (map - 1), SYNC_WAVE, 0, DI_SYNC_APIXEL, 1);
+				_ipu_dc_write_tmpl(ipu, 11, WROD(0), 0, map, SYNC_WAVE, 0, DI_SYNC_APIXEL, 1);
 				/* configure user events according to DISP NUM */
 				ipu_dc_write(ipu, width - 1, DC_UGDE_3(disp));
 			}
-		   _ipu_dc_write_tmpl(ipu, 5, WROD(0), 0, map, SYNC_WAVE, 8, 5, 1);
-		   _ipu_dc_write_tmpl(ipu, 6, WROD(0), 0, map, SYNC_WAVE, 4, 5, 0);
-		   _ipu_dc_write_tmpl(ipu, 7, WRG, 0, map, NULL_WAVE, 0, 0, 1);
-		   _ipu_dc_write_tmpl(ipu, 12, WROD(0), 0, map, SYNC_WAVE, 0, 5, 1);
+		   _ipu_dc_write_tmpl(ipu, 5, WROD(0), 0, map, SYNC_WAVE, 8, DI_SYNC_APIXEL, 1);
+		   _ipu_dc_write_tmpl(ipu, 6, WROD(0), 0, map, SYNC_WAVE, 4, DI_SYNC_APIXEL, 0);
+		   _ipu_dc_write_tmpl(ipu, 7, WRG, 0, map, NULL_WAVE, 0, DI_SYNC_CLK, 1);
+		   _ipu_dc_write_tmpl(ipu, 12, WROD(0), 0, map, SYNC_WAVE, 0, DI_SYNC_APIXEL, 1);
 		}
 
 		if (sig.Hsync_pol) {
diff --git a/drivers/mxc/ipu3/ipu_regs.h b/drivers/mxc/ipu3/ipu_regs.h
index 458b0e0..d90c37f 100644
--- a/drivers/mxc/ipu3/ipu_regs.h
+++ b/drivers/mxc/ipu3/ipu_regs.h
@@ -701,9 +701,15 @@ enum di_sync_wave {
 	DI_SYNC_NONE = -1,
 	DI_SYNC_CLK = 0,
 	DI_SYNC_INT_HSYNC = 1,
+	DI_SYNC_COUNT_1 = 1,
 	DI_SYNC_HSYNC = 2,
 	DI_SYNC_VSYNC = 3,
-	DI_SYNC_DE = 5,
+	DI_SYNC_AFIELD = 4,
+	DI_SYNC_ALINE = 5,
+	DI_SYNC_APIXEL = 6,
+	DI_SYNC_COUNT_7 = 7,
+	DI_SYNC_COUNT_8 = 8,
+	DI_SYNC_COUNT_9 = 9,
 };
 
 /* DC template opcodes */
-- 
1.8.0

