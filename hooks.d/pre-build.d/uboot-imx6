
case $config_platform_branch in
    imx6*)
        ;;
    *)
        return 0
        ;;
esac

needcompile=yes

if [ -d .uboot ]; then
    cd .uboot

    shaloc=$(git log -n1 --format=oneline | awk '{print $1}')
    sharem=$(git ls-remote -h git://github.com/SolidRun/u-boot-imx6 imx6 | awk '{print $1}')

    if [ $sharem != $shaloc ]; then
        git clean -dfx  >/dev/null 2>&1
        git fetch
        git reset --hard origin/imx6
    else
        needcompile=no
    fi
else
    git clone -b imx6 --depth=1 --single-branch git://github.com/SolidRun/u-boot-imx6 .uboot
    cd .uboot
fi

[ $needcompile = yes ] || return 0

echo "BUILDING U-BOOT... Please wait"

cat << \EOF > /tmp/001.patch
--- a/include/configs/mx6_cubox-i.h
+++ b/include/configs/mx6_cubox-i.h
@@ -305,11 +305,11 @@ extern char *config_sys_prompt;
 #define CONFIG_SYS_PROMPT_MAX_CHARS	32
 #define CONFIG_SYS_PROMPT		config_sys_prompt
 #define CONFIG_AUTO_COMPLETE
-#define CONFIG_SYS_CBSIZE		1024
+#define CONFIG_SYS_CBSIZE		2048
 
 /* Print Buffer Size */
 #define CONFIG_SYS_PBSIZE (CONFIG_SYS_CBSIZE + CONFIG_SYS_PROMPT_MAX_CHARS + 16)
-#define CONFIG_SYS_MAXARGS	       16
+#define CONFIG_SYS_MAXARGS		64
 #define CONFIG_SYS_BARGSIZE CONFIG_SYS_CBSIZE
 
 #define CONFIG_SYS_LOAD_ADDR		CONFIG_LOADADDR
@@ -344,6 +344,7 @@ extern char *config_sys_prompt;
 
 #ifndef CONFIG_SYS_DCACHE_OFF
 #define CONFIG_CMD_CACHE
+
 #endif
 
 #endif                        /* __CONFIG_H * */
--- a/Makefile
+++ b/Makefile
@@ -671,12 +671,7 @@
 		@$(call SYSTEM_MAP,$<) > $(obj)System.map
 
 checkthumb:
-	@if test $(call cc-version) -lt 0404; then \
-		echo -n '*** Your GCC does not produce working '; \
-		echo 'binaries in THUMB mode.'; \
-		echo '*** Your board is configured for THUMB mode.'; \
-		false; \
-	fi
+		true
 
 # GCC 3.x is reported to have problems generating the type of relocation
 # that U-Boot wants.
EOF

patch -p1 -F 3000 < /tmp/001.patch  >/dev/null 2>&1

eval $config_build_env make mx6_cubox-i_config >/dev/null 2>&1
eval $config_build_env make  >/dev/null 2>&1

set +e

echo "U-BOOT compiled."

cp SPL ../../content-tpl/etc/uboot-env
cp u-boot.img ../../content-tpl/etc/uboot-env
