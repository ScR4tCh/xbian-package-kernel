From 34930b5e1017aa9b29fa2089146dff71358a00b3 Mon Sep 17 00:00:00 2001
From: Troy Kisky <troy.kisky@boundarydevices.com>
Date: Fri, 7 Mar 2014 16:46:58 -0700
Subject: [PATCH 1/1] mxc_mipi_csi2: fix mipi camera when hdmi monitor not used

---
 arch/arm/boot/dts/imx6qdl.dtsi   |  4 ++--
 drivers/mxc/mipi/mxc_mipi_csi2.c | 40 ++++++++++++++++++++--------------------
 drivers/mxc/mipi/mxc_mipi_csi2.h |  6 ++++--
 3 files changed, 26 insertions(+), 24 deletions(-)

diff --git a/arch/arm/boot/dts/imx6qdl.dtsi b/arch/arm/boot/dts/imx6qdl.dtsi
index a30ddf6..6b700b0 100644
--- a/arch/arm/boot/dts/imx6qdl.dtsi
+++ b/arch/arm/boot/dts/imx6qdl.dtsi
@@ -938,13 +938,13 @@
 				compatible = "fsl,imx6q-mipi-csi2";
 				reg = <0x021dc000 0x4000>;
 				interrupts = <0 100 0x04>, <0 101 0x04>;
-				clocks = <&clks 138>, <&clks 53>;
+				clocks = <&clks 138>, <&clks 53>, <&clks 124>;
 				/* Note: clks 138 is hsi_tx, however, the dphy_c
 				 * hsi_tx and pll_refclk use the same clk gate.
 				 * In current clk driver, open/close clk gate do
 				 * use hsi_tx for a temporary debug purpose.
 				 */
-				clock-names = "dphy_clk", "pixel_clk";
+				clock-names = "dphy_clk", "pixel_clk", "cfg_clk";
 				status = "disabled";
 			};
 
diff --git a/drivers/mxc/mipi/mxc_mipi_csi2.c b/drivers/mxc/mipi/mxc_mipi_csi2.c
index df7997ad..9c34890 100644
--- a/drivers/mxc/mipi/mxc_mipi_csi2.c
+++ b/drivers/mxc/mipi/mxc_mipi_csi2.c
@@ -77,7 +77,8 @@ bool mipi_csi2_enable(struct mipi_csi2_info *info)
 
 	if (!info->mipi_en) {
 		info->mipi_en = true;
-		clk_prepare_enable(info->dphy_clk);
+		clk_prepare_enable(info->clks[DPHY_CLK]);
+		clk_prepare_enable(info->clks[CFG_CLK]);
 	} else
 		mipi_dbg("mipi csi2 already enabled!\n");
 
@@ -103,7 +104,8 @@ bool mipi_csi2_disable(struct mipi_csi2_info *info)
 
 	if (info->mipi_en) {
 		info->mipi_en = false;
-		clk_disable_unprepare(info->dphy_clk);
+		clk_disable_unprepare(info->clks[CFG_CLK]);
+		clk_disable_unprepare(info->clks[DPHY_CLK]);
 	} else
 		mipi_dbg("mipi csi2 already disabled!\n");
 
@@ -252,7 +254,7 @@ EXPORT_SYMBOL(mipi_csi2_get_error2);
  */
 int mipi_csi2_pixelclk_enable(struct mipi_csi2_info *info)
 {
-	return clk_prepare_enable(info->pixel_clk);
+	return clk_prepare_enable(info->clks[PIXEL_CLK]);
 }
 EXPORT_SYMBOL(mipi_csi2_pixelclk_enable);
 
@@ -264,7 +266,7 @@ EXPORT_SYMBOL(mipi_csi2_pixelclk_enable);
  */
 void mipi_csi2_pixelclk_disable(struct mipi_csi2_info *info)
 {
-	clk_disable_unprepare(info->pixel_clk);
+	clk_disable_unprepare(info->clks[PIXEL_CLK]);
 }
 EXPORT_SYMBOL(mipi_csi2_pixelclk_disable);
 
@@ -364,6 +366,10 @@ unsigned int mipi_csi2_get_virtual_channel(struct mipi_csi2_info *info)
 }
 EXPORT_SYMBOL(mipi_csi2_get_virtual_channel);
 
+static const unsigned char * const clks[] = {
+	"dphy_clk", "pixel_clk", "cfg_clk",
+};
+
 /**
  * This function is called by the driver framework to initialize the MIPI CSI2
  * device.
@@ -380,6 +386,7 @@ static int mipi_csi2_probe(struct platform_device *pdev)
 	struct resource *res;
 	u32 mipi_csi2_dphy_ver;
 	int ret;
+	int i;
 
 	gmipi_csi2 = kmalloc(sizeof(struct mipi_csi2_info), GFP_KERNEL);
 	if (!gmipi_csi2) {
@@ -426,20 +433,13 @@ static int mipi_csi2_probe(struct platform_device *pdev)
 	gmipi_csi2->pdev = pdev;
 	gmipi_csi2->mipi_en = false;
 
-	/* get mipi dphy clk */
-	gmipi_csi2->dphy_clk = devm_clk_get(dev, "dphy_clk");
-	if (IS_ERR(gmipi_csi2->dphy_clk)) {
-		dev_err(&pdev->dev, "failed to get dphy pll_ref_clk\n");
-		ret = PTR_ERR(gmipi_csi2->dphy_clk);
-		goto err;
-	}
-
-	/* get mipi to ipu pixel clk */
-	gmipi_csi2->pixel_clk = devm_clk_get(dev, "pixel_clk");
-	if (IS_ERR(gmipi_csi2->pixel_clk)) {
-		dev_err(&pdev->dev, "failed to get mipi pixel clk\n");
-		ret = PTR_ERR(gmipi_csi2->pixel_clk);
-		goto err;
+	for (i = 0; i < ARRAY_SIZE(clks); i++) {
+		gmipi_csi2->clks[i] = devm_clk_get(dev, clks[i]);
+		if (IS_ERR(gmipi_csi2->clks[i])) {
+			dev_err(&pdev->dev, "failed to get %s\n", clks[i]);
+			ret = PTR_ERR(gmipi_csi2->clks[i]);
+			goto err;
+		}
 	}
 
 	res = platform_get_resource(pdev, IORESOURCE_MEM, 0);
@@ -456,11 +456,11 @@ static int mipi_csi2_probe(struct platform_device *pdev)
 	}
 
 	/* mipi dphy clk enable for register access */
-	clk_prepare_enable(gmipi_csi2->dphy_clk);
+	clk_prepare_enable(gmipi_csi2->clks[DPHY_CLK]);
 	/* get mipi csi2 dphy version */
 	mipi_csi2_dphy_ver = mipi_csi2_read(gmipi_csi2, MIPI_CSI2_VERSION);
 
-	clk_disable_unprepare(gmipi_csi2->dphy_clk);
+	clk_disable_unprepare(gmipi_csi2->clks[DPHY_CLK]);
 
 	platform_set_drvdata(pdev, gmipi_csi2);
 
diff --git a/drivers/mxc/mipi/mxc_mipi_csi2.h b/drivers/mxc/mipi/mxc_mipi_csi2.h
index f9ef164..ee71b78 100644
--- a/drivers/mxc/mipi/mxc_mipi_csi2.h
+++ b/drivers/mxc/mipi/mxc_mipi_csi2.h
@@ -34,8 +34,10 @@ struct mipi_csi2_info {
 	unsigned int	v_channel;
 	unsigned int	lanes;
 	unsigned int	datatype;
-	struct clk	*dphy_clk;
-	struct clk	*pixel_clk;
+#define DPHY_CLK	0
+#define PIXEL_CLK	1
+#define CFG_CLK		2
+	struct clk	*clks[3];
 	unsigned int	*mipi_csi2_base;
 	struct platform_device	*pdev;
 
-- 
1.8.1.2

